\usepackage{xcolor}
\definecolor{CPPLight}  {HTML} {686868}
\definecolor{CPPSteel}  {HTML} {888888}
\definecolor{CPPDark}   {HTML} {262626}
\definecolor{CPPBlue}   {HTML} {4172A3}
\definecolor{CPPGreen}  {HTML} {487818}
\definecolor{CPPBrown}  {HTML} {A07040}
\definecolor{CPPRed}    {HTML} {AD4D3A}
\definecolor{CPPViolet} {HTML} {7040A0}
\definecolor{CPPGray}  {HTML} {B8B8B8}
\lstset{
    columns=fixed,
    numbers=left,
    frame=none,
    backgroundcolor=\color[RGB]{245,245,244},
    keywordstyle=\color[RGB]{40,40,255},
    numberstyle=\footnotesize\color{darkgray},
    commentstyle=\it\color[RGB]{0,96,96},
    stringstyle=\rmfamily\slshape\color[RGB]{128,0,0},   % 设置字符串格式
    showstringspaces=false,
    language=c++,
    morekeywords={
        align, continue, friend, register,
        true, alignof, decltype, goto,
        reinterpret_cast, try, asm, default,
        if, return, typedef, auto,
        delete, inline, short, typeid,
        bool, do, int, signed,
        typename, break, double, long,
        sizeof, union, case, dynamic_cast,
        mutable, static, unsigned, catch,
        else, namespace, static_assert, using,
        char, enum, new, static_cast,
        virtual, char16_t, char32_t, explict,
        noexcept, struct, void, export,
        nullptr, switch, volatile, class,
        extern, operator, template, wchar_t,
        const, false, private, this,
        while, constexpr, float, protected,
        thread_local,  const_cast, for,
        public, throw, std
    },
    emph={
        map, set, multimap, multiset,
        unordered_map, unordered_set, unordered_multiset, unordered_multimap,
        vector, string, list, deque,
        array, stack, forwared_list, iostream,
        memory, shared_ptr, unique_ptr, random,
        bitset, ostream, istream, cout,
        cin, endl, move, default_random_engine,
        uniform_int_distribution, iterator, algorithm, functional,
        bing, numeric, Vector, Result,
        Matrix, uint32_t, double_t, State
    },
    emphstyle=\color{CPPViolet}, 
}